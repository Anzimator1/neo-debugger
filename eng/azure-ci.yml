variables:
  configuration: release

pool:
  vmImage: 'windows-2019'

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack neodebug library'
  inputs:
    command: 'custom'
    custom: pack
    arguments: './src/library -c $(configuration) -o $(Build.ArtifactStagingDirectory)/adapter --include-symbols'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack neodebug adapter'
  inputs:
    command: 'custom'
    custom: pack
    arguments: './src/adapter -c $(configuration) -o $(Build.ArtifactStagingDirectory)/adapter --include-symbols'

- task: PublishBuildArtifacts@1
  displayName: 'publish nuget build artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/adapter'
    artifactName: 'nuget-package'

- task: CopyFiles@2
  displayName: 'copy adapter nuget package into extension folder'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)/adapter'
    Contents: 'neodebug-adapter.*.nupkg'
    TargetFolder: './src/extension'

- task: DeleteFiles@1
  displayName: 'remove symbol nuget packages from extension folder'
  inputs:
    sourceFolder:  './src/extension'
    contents: '*.symbols.nupkg'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: 'install'
    workingDir: './src/extension' 

- task: Npm@1
  displayName: 'npm run package-vsix'
  inputs:
    command: 'custom'
    customCommand: 'run package-vsix'
    workingDir: './src/extension' 

- task: CopyFiles@2
  displayName: 'copy VSIX package to Artifact Staging Directory'
  inputs:
    SourceFolder: './src/extension'
    Contents: '*.vsix'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/extension'

- task: PublishBuildArtifacts@1
  displayName: 'publish vsix build artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/extension'
    artifactName: 'VSIX-package'
